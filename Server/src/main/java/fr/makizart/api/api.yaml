openapi: 3.0.0
info:
  title: Admin API
  version: 1.0.0
  description: API for managing projects and user authentication

paths:
  /admin/projects/create/project/:
    post:
      summary: Create a new project
      description: Create a new project within the admin's account.
      parameters:
        - in: query
          name: name
          required: true
          schema:
            type: string
          description: The name of the new project.
      responses:
        200:
          description: Project successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/created_id'
      security:
        - SpringOAuth2: [admin]

  /admin/projects/{project_id}/create/resource/:
    post:
      summary: Create a resource in a project
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
          description: The ID of the project where the new resource will be created
        - in: query
          name: name
          description: The name of the new resource
          required: true
          schema:
            type: string
      responses:
        200:
          description: ressource created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/created_id'
        404:
          description: Id not found
        409:
          description: If resource already exist
        5XX:
          description: Unexpected error
      security:
        - SpringOAuth2: [admin]

  /admin/projects/ressources/{resource_id}/image/:
    put:
      summary: Upload a image on a ressource
      description: Upload an image on a resource, override if already exist.
      parameters:
        - in: path
          name: resource_id
          required: true
          schema:
            type: integer
          description: The ID of the project where to upload the image.
        - in: query
          name: name
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        200:
          description: Image uploaded successfully.
        400:
          description: Invalid name or unsupported media
        404:
          description: Ressource not found. The specified ressource ID  does not exist.
        5XX:
          description: Unexpected error
      security:
        - SpringOAuth2: [admin]
  
  /admin/projects/ressources/{resource_id}/trackedImage/:
    put:
      summary: Upload a tracked image on a ressource
      description: Upload an tracked image on a resource, override if already exist.
      parameters:
        - in: path
          name: resource_id
          required: true
          schema:
            type: integer
          description: The ID of the ressource where to upload the tracked image.
        - in: query
          name: name
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        200:
          description: Tracked image uploaded successfully.
        400:
          description: Invalid name or unsupported media
        404:
          description: Ressource not found. The specified ressource ID  does not exist.
        5XX:
          description: Unexpected error
      security:
        - SpringOAuth2: [admin]
        
  /admin/projects/ressources/{resource_id}/markers/:
    put:
      summary: Upload markers on a ressource
      description: Upload markes on a resource, override if already exist.
      parameters:
        - in: path
          name: resource_id
          required: true
          schema:
            type: integer
          description: The ID of the ressource where to upload the markers.
        - in: query
          name: name
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          marker1/iset:
            schema:
              type: string
              format: binary
          marker2/fset:
            schema:
              type: string
              format: binary
          marker3/fset3:
            schema:
              type: string
              format: binary
      responses:
        200:
          description: Markers uploaded successfully.
        400:
          description: Invalid name or unsupported media
        404:
          description: Ressource not found. The specified ressource ID  does not exist.
        5XX:
          description: Unexpected error
      security:
        - SpringOAuth2: [admin]
        
  /admin/projects/ressources/{resource_id}/sound/:
    put:
      summary: Upload sound on a ressource
      description: Upload sound on a ressource, override if already exist.
      parameters:
        - in: path
          name: resource_id
          required: true
          schema:
            type: string
          description: The ID of the resource where to upload the sound.
        - in: query
          name: name
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          audio/mp3:
            schema:
              type: string
              format: binary

      responses:
        200:
          description: Tracked image uploaded successfully.
        400:
          description: Invalid name or unsupported media
        404:
          description: Ressource not found. The specified ressource ID  does not exist.
        5XX:
          description: Unexpected error
      security:
        - SpringOAuth2: [ admin ]

  /admin/projects/ressources/{resource_id}/video/:
    put:
      summary: Upload video on a ressource
      description: Upload video on a ressource
      parameters:
        - in: path
          name: resource_id
          required: true
          schema:
            type: string
          description: The ID of the resource where to upload the video.
        - in: query
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Tracked image uploaded successfully.
        400:
          description: Invalid name or unsupported media
        404:
          description: Ressource not found. The specified ressource ID  does not exist.
        5XX:
          description: Unexpected error
      security:
        - SpringOAuth2: [ admin ]
        
  /public/projects/{project_id}/rename/:
    put:
      summary: Rename a project
      description: Rename a project by specifying the new project id.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
          description: The ID of the project.
        - in: query
          name: new_name
          required: true
          schema:
            type: string
          description: The new name of the project.
      responses:
        200:
          description: Rename successful.
        404:
          description: Unauthorized or not found.
        5XX:
          description: Unexpected error
      security:
        - SpringOAuth2: [ admin ]
        
        
  /public/projects/ressources/{ressource_id}/rename/:
    put:
      summary: Rename a ressource
      description: Rename a ressource by specifying the new ressource id.
      parameters:
        - in: path
          name: ressource_id
          required: true
          schema:
            type: string
          description: The ID of the ressource.
        - in: query
          name: new_name
          required: true
          schema:
            type: string
          description: The new name of the ressource.
      responses:
        200:
          description: Rename successful.
        404:
          description: Unauthorized or not found.
        5XX:
          description: Unexpected error
      security:
        - SpringOAuth2: [ admin ]

  /admin/projects/ressources/medias/{media_id}/rename/:
    put:
      summary: Rename media
      description: Rename a media by specifying the media ID.
      parameters:
        - in: path
          name: media_id
          required: true
          schema:
            type: string
          description: The ID of the media.
      responses:
        200:
          description: Rename successfully.
        400:
          description: Project not found or invalid permission.
        5XX:
          description: Unexpected error
      security:
        - SpringOAuth2: [ admin ]
        
  /public/projects/{project_id}/delete/:
    delete:
      summary: Delete a project
      description: Delete a project by specifying the project id.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
          description: The ID of the project.
      responses:
        200:
          description: Rename successful.
        404:
          description: Unauthorized or not found.
        5XX:
          description: Unexpected error
      security:
        - SpringOAuth2: [ admin ]
        
  /public/projects/ressources/{ressource_id}/delete/:
    delete:
      summary: Delete a ressource
      description: Delete a ressource by specifying the ressource id.
      parameters:
        - in: path
          name: ressource_id
          required: true
          schema:
            type: string
          description: The ID of the ressource.
      responses:
        200:
          description: Rename successful.
        404:
          description: Unauthorized or not found.
        5XX:
          description: Unexpected error.
      security:
        - SpringOAuth2: [ admin ]

  /public/projects/:
    get:
      summary: Get a list of projects
      description: Returns a list of public projects.
      responses:
        200:
          description: List of projects as string
          content:
            application/json:
              schema:
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        creationDate:
                          type: string
  
  /public/projects/{project_id}/ressources/:
    get:
      summary: Get a list of ressources in project
      description: Returns a list of ressource in a projects specified by ID.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
          200:
            description: All resources in a project
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    resources:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          creationDate:
                            type: string
                          thumbnail_id:
                            description: "id of thumbnail image"
                            type: integer
          404:
            description: Project not found
            
  /public/projects/ressources/{resource_id}/:
    get:
      summary: Get a resource
      parameters:
        - name: resource_id
          in: path
          description: ID of the resource to be accessed
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return all project element list
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  creationDate:
                    type: string
                  marker1_id:
                    type: integer
                  marker2_id:
                    type: integer
                  marker3_id:
                    type: integer
                  image_id:
                    type: integer
                  sound_id:
                    type: integer
                  video_id:
                    type: integer
        404:
          description: resource not found
        5XX:
          description: Bad request

  /public/projects/ressources/images/{media_id}/:
    get:
      summary: Get a image
      description: Get an image (or tracked image) stored on server by specified the ID.
      parameters:
        - in: path
          name: media_id
          required: true
          schema:
            type: integer
          description: The ID of the media to be accessed.
      responses:
        200:
          description: The image, in Base64 form
          content:
            image/jpeg:
              schema:
                  type: string
                  format: binary
        404:
          description: image not found

  /public/projects/ressources/sounds/{media_id}/:
    get:
      summary: Get a sound file
      description: Get sound stored on server by specified the ID.
      parameters:
        - in: path
          name: media_id
          required: true
          schema:
            type: integer
          description: The ID of the media to be accessed.
      responses:
        200:
          description: The media, in binary form
          content:
            audio/mpeg:
              schema:
                type: string
                format: binary
        404:
         description: Image not found. The specified project ID or image does not exist.
        5XX:
          description: Unexpected error

  /public/projects/ressources/video/{media_id}/:
    get:
      summary: Get a video
      description: Get a video stored on server by specified the ID.
      parameters:
        - in: path
          name: media_id
          required: true
          schema:
            type: integer
          description: The ID of the media to be accessed.
      responses:
        200:
          description: The media, in string form
          content:
             application/json:
              schema:
                type: object
                properties:
                  url:
                    description: The url of the video
                    type: string
        404:
          description: image not found
  
  /public/projects/{project_id}/ressources/markers:
    get:
      summary: Get a list of markers in a project
      description: Get the list of markers with the IDs of the resources in which they are.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: List of markers and id as string
          content:
            application/json:
              schema:
                type: object
                properties:
                  ressources:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        marker_1:
                          type: string
                        marker_2:
                          type: string
                        marker_3:
                          type: string

  /public/storage/:
    get:
      summary: Get storage informations
      description: Get the free space and max space on the disk (in Mb)
      responses:
        200:
          description: Storage informations as string
          content:
            application/json:
              schema:
                type: object
                properties:
                  used:
                    type: integer
                  total:
                    type: integer

components:
  schemas:
    created_id:
      type: object
      properties:
        application/json:
            type: object
            properties:
              id:
                type: integer
                description: id of the created element

  securitySchemes:
    SpringOAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: "http://localhost:9000/oauth2/authorize"
          tokenUrl: "http://localhost:9000/oauth2/token"
          scopes:
            admin: Grants access to admin read/write operations
