openapi: 3.0.0
info:
  title: Admin API
  version: 1.0.0
  description: API for managing projects and user authentication

paths:
  /public/projects/:
    get:
      summary: Get a list of projects
      description: Returns a list of public projects.
      responses:
        200:
          description: List of projects as string
          content:
            application/json:
              schema:
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        creationDate:
                          type: string




  /public/projects/{project_id}/getAllResourceInProject/:
      get:
        summary: Get project element
        description: Returns the id of all element in project along with associated type
        parameters:
          - name: project_id
            in: path
            description: ID of the project to be accessed
            required: true
            schema:
              type: integer
        responses:
          200:
            description: Return all resource in a project
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    resources:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          creationDate:
                            type: string
                          thumbnail:
                            description: "thumbnail image id"
                            type: string
          404:
            description: Project not found

  /public/projects/{resource_id}/:
    get:
      summary: Get a resource
      parameters:
        - name: resource_id
          in: path
          description: ID of the resource to be accessed
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return all project element list
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  creationDate:
                    type: string
                  marker1:
                    type: string
                  marker2:
                    type: string
                  marker3:
                    type: string
                  image:
                    description: 'Base64 Image. Might be null if not set'
                    type: string
                  sound_id:
                    description: "Sound url, send a request if needed. Might be null if not set"
                    type: integer

                  video_url:
                    description: "Remote video ID. Might be null if not set"
                    type: string
        404:
          description: resource not found
        5XX:
          description: Bad request

  /public/projects/{media_id}/getLocallyStoredImage/:
    get:
      summary: Get an image
      description: Get an image stored on server
      parameters:
        - in: path
          name: media_id
          required: true
          schema:
            type: integer
          description: The ID of the media to be accessed.
      responses:
        200:
          description: The media, in Base64 form
          content:
            image/jpeg:
              schema:
                  type: string
                  format: binary
        404:
          description: image not found

  /public/projects/{media_id}/getLocallyStoredSound/:
    get:
      summary: Get a sound file
      description: Get sound stored on server
      parameters:
        - in: path
          name: media_id
          required: true
          schema:
            type: integer
          description: The ID of the media to be accessed.
      responses:
        200:
          description: The media, in binary form
          content:
            audio/mpeg:
              schema:
                type: string
                format: binary
        404:
         description: Image not found. The specified project ID or image does not exist.
        5XX:
          description: Unexpected error
          
  /public/projects/storage/:
    get:
      summary: Get storage informations
      description: Get the free space and max space on the disk (in Mb)
      responses:
        200:
          description: Storage informations as string
          content:
            application/json:
              schema:
                type: object
                properties:
                  used:
                    type: integer
                  total:
                    type: integer

  /admin/projects/{project_id}/:
    get:
      summary: Get project metadata
      description: Returns metadata of a specific project such as size on disk, creation date.
      parameters:
        - name: project_id
          in: path
          description: ID of the project to be accessed
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Project metadata successfully retrieved
        400:
          description: Invalid id
      security:
        - SpringOAuth2: [admin]
    delete:
      summary: Delete a project
      description: Delete a project by specifying the project ID to delete.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
          description: The ID of the project to delete.
      responses:
        200:
          description: OK
        400:
          description: Invalid id
        404:
          description: Project not found. The specified project ID does not exist.
        5XX:
          description: Unexpected error
      security:
        - SpringOAuth2: [admin]
    put:
      summary: Rename a project
      description: Rename a project by specifying the new project name.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
          description: The ID of the project where to upload the picture.
        - in: query
          name: new_name
          required: true
          schema:
            type: string
          description: The new name of the project.
      responses:
        200:
          description: OK.
        404:
          description: Unauthorized or not found.
        409:
          description: If resource already exist
        5XX:
          description: Unexpected error
      security:
        - SpringOAuth2: [ admin ]

    post:
      summary: Create a new project
      description: Create a new project within the admin's account.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Project successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/created_id'
      security:
        - SpringOAuth2: [admin]

  /admin/projects/:
    post:
      summary: Create a new project
      description: Create a new project within the admin account.
      parameters:
        - name: project_id
          in: query
          description: ID of the project to be created
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/created_id'
        400:
          description: Invalid id
        409:
          description: If resource already exist
      security:
        - SpringOAuth2: [admin]

  /admin/projects/{resource_id}/addVideo/:
    post:
      summary: Upload a video on a project
      description: Upload a video on a project
      parameters:
        - in: path
          name: resource_id
          required: true
          schema:
            type: integer
          description: The ID of the project where to upload the project.
        - in: query
          name: videoName
          required: true
          schema:
            type: string
        - in: query
          name: url
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              format: binary
      responses:
        200:
          description: Video uploaded successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/created_id'
        400:
          description: Invalid name or unsupported media
        404:
          description: Project and/or picture not found. The specified project ID and/or picture ID does not exist.
        409:
          description: If resource already exist
        5XX:
          description: Unexpected error
      security:
        - SpringOAuth2: [admin]

  /admin/projects/{resource_id}/createResource/:
    post:
      summary: Create a resource in a project
      parameters:
        - in: path
          name: resource_id
          required: true
          schema:
            type: integer
          description: The ID of the project where the new resource whill be created
        - in: query
          name: name
          description: The name of the new resource
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                marker1_id:
                  type: string
                marker2_id:
                  type: string
                marker3_id:
                  type: string
                image_id:
                  type: string
                video_id:
                  type: string
                sound_id:
                  type: string
      responses:
        200:
          description: resource created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/created_id'
        404:
          description: Id not found
        409:
          description: If resource already exist
        5XX:
          description: Unexpected error
      security:
        - SpringOAuth2: [admin]

  /admin/projects/{resource_id}/addImage/:
    post:
      summary: Upload a picture on a project
      description: Upload a picture on a project
      parameters:
        - in: path
          name: resource_id
          required: true
          schema:
            type: integer
          description: The ID of the project where to upload the picture.
        - in: query
          name: name
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        200:
          description: Picture uploaded successfully.
        400:
          description: Invalid name or unsupported media
        404:
          description: Project and/or picture not found. The specified project ID and/or picture ID does not exist.
        409:
          description: If resource already exist
        5XX:
          description: Unexpected error
      security:
        - SpringOAuth2: [admin]



  /admin/projects/{resource_id}/addSound/:
    post:
      summary: Upload sound on a project
      description: Upload sound on a project
      parameters:
        - in: path
          name: resource_id
          required: true
          schema:
            type: string
          description: The ID of the resource where to upload the picture.
        - in: query
          name: name
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          audio/mp3:
            schema:
              type: string
              format: binary

      responses:
        200:
          description: created sound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/created_id'
        400:
          description: Invalid name or unsupported media
        404:
          description: Project and/or picture not found. The specified project ID and/or picture ID does not exist.
        409:
          description: If resource already exist
        5XX:
          description: Unexpected error
      security:
        - SpringOAuth2: [ admin ]

  /admin/projects/{media_id}/rename/:

    post:
      summary: Rename media on project
      description: Rename a media by specifying the project ID containing the media to delete.
      parameters:
        - in: path
          name: media_id
          required: true
          schema:
            type: string
          description: The ID of the media to be deleted.
      responses:
        200:
          description: Rename successfully.
        400:
          description: Project not found or invalid permission.
        404:
          description: Picture not found. The project does not contains picture.
        409:
          description: If resource already exist
        5XX:
          description: Unexpected error
      security:
        - SpringOAuth2: [ admin ]

  /admin/projects/{media_id}/delete:
    delete:
      summary: Delete media on project
      description: Delete a media by specifying the project ID containing the media to delete.
      parameters:
        - in: path
          name: media_id
          required: true
          schema:
            type: string
          description: The ID of the media to be deleted.
      responses:
        200:
          description: deleted successfully.
        404:
          description: Project not found or invalid permission.
        409:
          description: If resource already exist
        5XX:
          description: Unexpected error
      security:
        - SpringOAuth2: [ admin ]

components:

  schemas:
    created_id:
      type: object
      properties:
        application/json:
            type: object
            properties:
              id:
                type: integer
                description: id of the created resource



  securitySchemes:
    SpringOAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: "http://localhost:9000/oauth2/authorize"
          tokenUrl: "http://localhost:9000/oauth2/token"
          scopes:
            admin: Grants access to admin read/write operations
