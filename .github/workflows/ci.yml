name: CI/CD pipeline

on:
  push:
    branches:
      - containerization

jobs:
  setup-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

        #install docker in vm from ci.yml
      - name: Install Docker and Node in VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 34.55.190.196
          username: asus
          key: ${{ secrets.SSH_PRIVATE }}
          script: |
            set -e
            if ! command -v docker 2>&1 > /dev/null; then
                echo "Installing Docker..."
                curl -fsSL https://get.docker.com -o get-docker.sh
                sudo sh get-docker.sh
            fi
            
            if ! command -v node > /dev/null 2>&1; then
              echo "Installing Node.js via NVM..."
              if [ ! -d "$HOME/.nvm" ]; then
                curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
              fi
              export NVM_DIR="$HOME/.nvm"
              [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
              nvm install --lts
            fi
            
            if ! command -v java > /dev/null 2>&1; then
              echo "Installing Java..."
              sudo apt install openjdk-17-jdk openjdk-17-jre -y
              java --version
            fi

      - name: Clone project and start DB
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 34.55.190.196
          username: asus
          key: ${{ secrets.SSH_PRIVATE }}
          script: |
            sudo apt-get install build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev -y
            # Remove the project if it already exists in order to remove .mind files remained in file system
            if [ -d makizapp ]; then sudo rm -rf makizapp; fi   
            git clone --branch containerization https://github.com/HanaeMelehi/makizapp.git
            cd makizapp
            #delete DB data from previous run
            sudo docker compose down --volumes --remove-orphans
            sudo docker compose up -d
      

      - name: mind tracker and spring boot
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 34.55.190.196
          username: asus
          key: ${{ secrets.SSH_PRIVATE }}
          command_timeout : '30m'
          script: |
            set -e
            cd makizapp
            echo "Building Docker image for mind tracker..."
            sudo docker build -t mind-tracker-compiler ./image-tracking-project
            
            echo "Building Angular frontend..."
            cd WebView/site
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            npm install
            npm install -g @angular/cli
            ng build --configuration production
            cd ../../
            
            echo "Moving Angular build output..."
            # check if static folder exists
            if [ ! -d SpringBootServer/src/main/resources/static/ ]; then
              mkdir SpringBootServer/src/main/resources/static/
            fi
            #check if the folder is not empty
            if [ "$(ls -A SpringBootServer/src/main/resources/static/)" ]; then
              sudo rm SpringBootServer/src/main/resources/static/*
            fi
            
            sudo mv WebView/site/dist/site/* SpringBootServer/src/main/resources/static/
            
            echo "Building and starting Spring Boot..."
            sudo ./gradlew clean build
            date_now=$(date +"%Y-%m-%d_%H-%M-%S")
            mkdir -p ~/logs
            sudo nohup ./gradlew :SpringBootServer:bootRun > ~/logs/springboot_$date_now.log 2>&1 &
            sleep 10 # wait for app to start
